{
  "openapi": "3.1.0",
  "info": {
    "title": "Fulkoping Rental API",
    "description": "API documentation for Fulkoping Rental application",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/vehicles": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get all vehicles",
        "description": "Fetches all vehicles and returns them as DTOs. Requires UserKey.",
        "operationId": "getAllVehicles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "UserKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Create a vehicle",
        "description": "Creates a new vehicle based on the provided data. Requires AdminKey.",
        "operationId": "createVehicle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVehicleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all users. Requires AdminKey.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "description": "Creates a new user from the provided DTO. Requires AdminKey.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/rentals": {
      "get": {
        "tags": [
          "Rentals"
        ],
        "summary": "Get all rentals",
        "description": "Fetches all rentals from the database and returns them as DTOs. Requires AdminKey.",
        "operationId": "getAllRentals",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Rentals"
        ],
        "summary": "Create rental",
        "description": "Creates a new rental from the provided DTO. Requires AdminKey.",
        "operationId": "createRental",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRentalDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RentalDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/vehicles/{id}/rent": {
      "patch": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Update rent status",
        "description": "Updates the 'rented' field of a vehicle by ID. Only 'rented' is allowed. Requires AdminKey.",
        "operationId": "updateRentStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Fetches a specific user by ID. Requires AdminKey.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a user",
        "description": "Deletes a user by ID. Requires AdminKey.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user",
        "description": "Applies allowed patch fields to a user. Requires AdminKey.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {}
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/rentals/{id}/return": {
      "patch": {
        "tags": [
          "Rentals"
        ],
        "summary": "Return rental",
        "description": "Marks a rental as returned. Body must be empty. Requires AdminKey.",
        "operationId": "registerReturn",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RentalDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/vehicles/{id}": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get vehicle by ID",
        "description": "Fetches a specific vehicle by its ID. Requires UserKey.",
        "operationId": "getVehicleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Delete vehicle",
        "description": "Deletes a vehicle by its ID. Requires AdminKey.",
        "operationId": "deleteVehicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/vehicles/trucks": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get all trucks",
        "description": "Fetches all vehicles of type Truck. Requires UserKey.",
        "operationId": "getAllTrucks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "UserKey": []
          }
        ]
      }
    },
    "/api/vehicles/trailers": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get all trailers",
        "description": "Fetches all vehicles of type Trailer. Requires UserKey.",
        "operationId": "getAllTrailers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "UserKey": []
          }
        ]
      }
    },
    "/api/vehicles/cars": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get all cars",
        "description": "Fetches all vehicles of type Car. Requires UserKey.",
        "operationId": "getAllCars",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "UserKey": []
          }
        ]
      }
    },
    "/api/users/customers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all customers",
        "description": "Returns all users with customer role. Requires AdminKey.",
        "operationId": "getAllCustomers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/users/admins": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all admins",
        "description": "Returns all users with admin role. Requires AdminKey.",
        "operationId": "getAllAdmins",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/rentals/{id}": {
      "get": {
        "tags": [
          "Rentals"
        ],
        "summary": "Get rental by ID",
        "description": "Fetches a rental by its ID and returns it as a DTO. Requires AdminKey.",
        "operationId": "getRentalById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RentalDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Rentals"
        ],
        "summary": "Delete rental",
        "description": "Deletes a rental by its ID. Requires AdminKey.",
        "operationId": "deleteRental",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/rentals/history/vehicles/{vehicleId}": {
      "get": {
        "tags": [
          "Rentals"
        ],
        "summary": "Get vehicle rental history",
        "description": "Fetches all rentals for a specific vehicle. Requires AdminKey.",
        "operationId": "getVehicleHistory",
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    },
    "/api/rentals/history/users/{userId}": {
      "get": {
        "tags": [
          "Rentals"
        ],
        "summary": "Get user rental history",
        "description": "Fetches all rentals for a specific user. Requires AdminKey.",
        "operationId": "getUserHistory",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RentalDTO"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "AdminKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateVehicleDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1
          },
          "registrationNumber": {
            "type": "string",
            "minLength": 1
          },
          "brand": {
            "type": "string",
            "minLength": 1
          },
          "model": {
            "type": "string",
            "minLength": 1
          },
          "seatCount": {
            "type": "integer",
            "format": "int32",
            "maximum": 9,
            "minimum": 1
          },
          "maxWeight": {
            "type": "integer",
            "format": "int32",
            "maximum": 750,
            "minimum": 1
          },
          "drivingLicenseLevel": {
            "type": "string"
          },
          "rented": {
            "type": "boolean"
          }
        },
        "required": [
          "brand",
          "model",
          "registrationNumber",
          "type"
        ]
      },
      "VehicleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "registrationNumber": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "seatCount": {
            "type": "integer",
            "format": "int32"
          },
          "maxWeight": {
            "type": "integer",
            "format": "int32"
          },
          "drivingLicenseLevel": {
            "type": "string"
          },
          "rented": {
            "type": "boolean"
          }
        }
      },
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1
          },
          "firstName": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          },
          "lastName": {
            "type": "string",
            "maxLength": 20,
            "minLength": 2
          },
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "phoneNumber": {
            "type": "string",
            "pattern": "\\+\\d{2}\\s?\\d{6,15}"
          },
          "employeeNumber": {
            "type": "string",
            "pattern": "^[A-Z]{6}[1-9][0-9]?$"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "type"
        ]
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "employeeNumber": {
            "type": "string"
          }
        }
      },
      "CreateRentalDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "userId",
          "vehicleId"
        ]
      },
      "RentalDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userFirstName": {
            "type": "string"
          },
          "userLastName": {
            "type": "string"
          },
          "vehicleId": {
            "type": "integer",
            "format": "int64"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "vehicleRegistrationNumber": {
            "type": "string"
          },
          "vehicleType": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "UserKey": {
        "type": "apiKey",
        "name": "X-USER-KEY",
        "in": "header"
      },
      "AdminKey": {
        "type": "apiKey",
        "name": "X-ADMIN-KEY",
        "in": "header"
      }
    }
  }
}